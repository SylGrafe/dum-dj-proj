<!doctype html>
<html lang="en">
<head>
</head>
<body>
<!--
"gettings started with django "detailed  comments 
/home/syl1/private/Pgm/djo1/top/polls/templates/polls/index_tut3.html
the  corresponding file  used  in the django project  is
/home/syl1/private/Pgm/djo1/top/polls/templates/polls/index.html 
# see also comments in   /home/syl1/private/Pgm/djo1/top/polls/urls_tut3.py
-->

<!--
It was necessary to  to create a subfolder 'polls' under /Pgm/djo1/top/polls/templates/
to put all html files to avoid pb between all possibles templates in a the project
so this file is put under .../top/polls/templates/polls/
-->

<!--
{# one line comment for html django template engine  #}

{%  comment %}
several lines comments for django html template engine notice as djnago comments  are nor highlighted in gedit i put htmlcomments tag around
{%  endcomment %}
-->


<!--
Notice cannot put a engine  tag directly inside a htlm comments 
example of usign  the template engine comment tag  around the url tag 
{%  comment %}
        <li> <a href="{% url 'detail' question.id %}">{{ question.question_text }}
{%  endcomment %}

-->

<!--
Being a web framework, Django needs a convenient way to generate HTML dynamically. The most common approach relies on templates. A template contains the static parts of the desired html output as well as some special syntax describing how dynamic content will be inserted.
https://docs.djangoproject.com/en/3.1/intro/tutorial03/
-->

{% if latest_question_list %}
    <ul>
    {% for question in latest_question_list %}
        <!--
        example of template using the namespacing  defined in polls/views.py
        notice the hard codded URL : a href="/polls...
        <li><a href="/polls/{{ question.id }}/">{{ question.question_text }}</a></li>
        -->

         <strong>
        </strong>
        <!--
        no more hard code URL ,  use the  url template tag  
        and get the right url from    /home/syl1/private/Pgm/djo1/top/polls/urls.py
        ...
        path('<int:question_id>/', views.detail, name='detail'),
{%  comment %}
        <li> <a href="{% url 'detail' question.id %}">{{ question.question_text }}
{%  endcomment %}
        </a></li>
        -->

        <!--
        use namespacing instead  , use 'polls:detailXX'
        to point to the namespaced detail view
        -->
        <i>
        <li> <a href="{% url 'polls:detailXX' question.id %}">{{ question.question_text }}
        </a></li>
        </i>


    {% endfor %}
    </ul>
{% else %}
    <p>No polls are available.</p>
{% endif %}
</body>
</html>
